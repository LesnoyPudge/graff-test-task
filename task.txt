Тестовое задание: Поиск постов

Задача:
Реализовать поиск постов с ленивой загрузкой данных, используя JSONPlaceholder API.

Стек технологий:
- Vite
- React
- TypeScript
- Tailwind CSS
- Желательно добавить анимации с помощью библиотек (Framer Motion, GSAP, React Spring или аналогичная) или самому реализовать
- Без использования готовых UI-библиотек (Material-UI, Ant Design и т.д.)

Основной функционал:
1. Поиск постов по заголовку через JSONPlaceholder API (https://jsonplaceholder.typicode.com/posts)
2. Lazy loading - подгрузка постов при скролле до конца списка (по 12 за раз)
3. Отображение результатов в виде сетки карточек постов
4. Страница отдельного поста с комментариями в новой вкладке
5. UX: Лоадеры, скелетоны, "ничего не найдено" и пр.

Информация в карточке поста:
- Заголовок поста (title)
- Содержание поста (body)
- Кнопка "Комментарии" для открытия модального окна
- Кнопка с иконкой для открытия поста с комментариями в новой вкладке

Модальное окно с комментариями:
- Загрузка комментариев через API
- Отображение списка комментариев с информацией:
- Имя автора комментария (name)
- Email автора (email)
- Текст комментария (body)

Страница отдельного поста:
- Роутинг для отдельных постов (например, /post/{id})
- Отображение полной информации о посте
- Загрузка и отображение комментариев под постом
- Возможность возврата к поиску

Адаптивность (сетка с результатами поиска):
- Мобильная версия (экраны от 320px) - 3 колонки
- Планшетная версия (экраны от 768px) - 4 колонки
- Десктопная версия (экраны от 1440px) - 6 колонок

Результат
Предоставить рабочее приложение с возможностью локального запуска (ссылка на репозиторий), демонстрирующее все заявленные функции и анимации.